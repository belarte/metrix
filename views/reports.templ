package views

import (
	"strconv"

	"github.com/belarte/metrix/model"
	"github.com/belarte/metrix/views/components"
)

var reportsParams = components.SelectParams{
	ID:           "reports",
	Name:         "reports-select",
	Endpoint:     "/reports/select",
	Target:       "#reports-content",
	DefaultValue: "reports-select",
	DefaultText:  "Select a metric",
}

func FromMetrics(metrics model.Metrics) components.Options {
	var options components.Options

	for _, m := range metrics {
		o := components.Option{
			Value: strconv.Itoa(m.ID),
			Label: m.Title,
		}
		options = append(options, o)
	}

	return options
}

templ ReportsPage(metrics model.Metrics) {
	@layout() {
		<h5>Consult reports</h5>
		@components.Select(FromMetrics(metrics), reportsParams)
		<article id="reports-content">
			Please select a metric.
		</article>
		<style>
            .container {
                justify-content: center;
                align-items: center;
            }
            .item {margin: auto;}
        </style>
	}
}

templ Reports(entries model.Entries, diagram string) {
	<details>
		<summary>Entries</summary>
		<table>
			<thead>
				<tr>
					<th>#</th>
					<th>Date</th>
					<th>Value</th>
				</tr>
			</thead>
			<tbody>
				for i, entry := range entries {
					<tr>
						<td>{ strconv.Itoa(i+1) }</td>
						<td>{ entry.Date }</td>
						<td>{ strconv.FormatFloat(entry.Value, 'f', 2, 64) }</td>
					</tr>
				}
			</tbody>
		</table>
	</details>
	<details>
		<summary>Diagram</summary>
		@templ.Raw(diagram)
	</details>
}
