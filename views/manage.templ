package views

import (
	"fmt"
	"strconv"

	"github.com/belarte/metrix/model"
	"github.com/belarte/metrix/views/components"
)

var manageParams = components.SelectParams{
	ID:           "metric",
	Name:         "manage-select",
	Endpoint:     "/manage/select",
	Target:       "#manage-content",
	DefaultValue: "create",
	DefaultText:  "Create new metric",
}

templ ManagePage(metrics model.Metrics, selected model.Metric, btnLabel, additionalMessage string) {
	@layout() {
		@Manage(metrics, selected, btnLabel, additionalMessage)
	}
}

templ Manage(metrics model.Metrics, selected model.Metric, btnLabel, additionalMessage string) {
	<div id="manage-content">
		<h5>Manage metrics</h5>
		@components.Select(FromMetrics(metrics, selected), manageParams)
		<div style="text-align:center">
			<small>{ additionalMessage }</small>
		</div>
		<article>
			<form hx-post="/manage/submit" hx-target="#manage-content" hx-swap="outerHTML">
				<input type="hidden" id="id" name="id" value={ strconv.Itoa(selected.ID) }/>
				<label for="title">Title</label>
				<input type="text" id="title" name="title" placeholder="Title" value={ selected.Title } required/>
				<label for="unit">Unit</label>
				<input type="text" id="unit" name="unit" placeholder="Unit" value={ selected.Unit } required/>
				<label for="description">Description</label>
				<input type="text" id="description" name="description" placeholder="Description" value={ selected.Description } required/>
				<button type="submit">{ btnLabel }</button>
			</form>
			if selected.ID > 0 {
				<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
				<button
					id="delete-button"
					hx-delete={ fmt.Sprintf("/manage/%d", selected.ID) }
					hx-target="#manage-content"
					hx-swap="outerHTML"
					hx-trigger="confirmed"
					type="button"
					style="background-color: #f44336"
					onclick={ confirmation("delete-button", selected.Title) }
				>Delete</button>
			}
		</article>
	</div>
}

script confirmation(id, metric string) {
    const button = document.getElementById(id);
    const event = {
        title: `Delete metric "${metric}"?`,
        text: 'This action cannot be undone.',
        showCancelButton: true,
        cancelButtonText: 'Cancel',
    }

    Swal.fire(event).then(function(result) {
        if(result.isConfirmed) {
            htmx.trigger(button, 'confirmed');  
        } 
    })
}
